// Code generated by hero.
// source: /Users/chenhg5/go/src/goAdmin/resources/pages/info_render.html
// DO NOT EDIT!
package template

import (
	"bytes"
	"goAdmin/auth"
	"goAdmin/menu"

	"github.com/shiyanhui/hero"
)

func InfoList(infoList []map[string]string, menuList []menu.MenuItem, thead []string, paginator map[string]interface{}, title string, description string, user auth.User, buffer *bytes.Buffer) {
	buffer.WriteString(`<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>GoAdmin</title>
    <!-- Tell the browser to be responsive to screen width -->
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    <!-- Bootstrap 3.3.7 -->
    <link rel="stylesheet" href="../../assets/bootstrap/dist/css/bootstrap.min.css">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="../../assets/font-awesome/css/font-awesome.min.css">
    <!-- Ionicons -->
    <link rel="stylesheet" href="../../assets/Ionicons/css/ionicons.min.css">
    <!-- DataTables -->
    <link rel="stylesheet" href="../../assets/datatables.net-bs/css/dataTables.bootstrap.min.css">
    <!-- iCheck -->
    <link rel="stylesheet" href="../../assets/iCheck/minimal/_all.css">
    <link rel="stylesheet" href="../../assets/iCheck/futurico/futurico.css">
    <link rel="stylesheet" href="../../assets/iCheck/polaris/polaris.css">
    <link rel="stylesheet" href="../../assets/toastr/build/toastr.min.css">
    <link rel="stylesheet" href="../../assets/nprogress/nprogress.css">
    <link rel="stylesheet" href="../../assets/sweetalert/dist/sweetalert.css">
    <link rel="stylesheet" href="../../assets/select2/select2.min.css">
    <link rel="stylesheet" href="../../assets/fileinput/fileinput.min.css">
    <!-- Theme style -->
    <link rel="stylesheet" href="../../assets/dist/css/AdminLTE.min.css">
    <!-- AdminLTE Skins. Choose a skin from the css/skins
         folder instead of downloading all of them to reduce the load. -->
    <link rel="stylesheet" href="../../assets/dist/css/skins/_all-skins.min.css">
    <link rel="stylesheet" href="../../assets/duallistbox/bootstrap-duallistbox.min.css">

    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="../../assets/html5shiv/3.7.3/html5shiv.min.js"></script>
    <script src="../../assets/respond/1.4.2/respond.min.js"></script>
    <![endif]-->

    <!-- Google Font -->
    <link rel="stylesheet"
          href="../../assets/googleapis/font.css">
</head>
<!-- skin-black skin-green-light skin-green skin-red skin-yellow skin-purple skin-purple-light -->
<body class="hold-transition skin-black sidebar-mini">
<div class="wrapper">

    <header class="main-header">
        <!-- Logo -->
        <a href="../../index2.html" class="logo">
            <!-- mini logo for sidebar mini 50x50 pixels -->
            <span class="logo-mini"><b>G</b>A</span>
            <!-- logo for regular state and mobile devices -->
            <span class="logo-lg"><b>Go</b>Admin</span>
        </a>
        <!-- Header Navbar: style can be found in header.less -->
        <nav class="navbar navbar-static-top">
            <!-- Sidebar toggle button-->
            <a href="#" class="sidebar-toggle" data-toggle="push-menu" role="button">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </a>

            <div class="navbar-custom-menu">
                <ul class="nav navbar-nav">
                    <!-- User Account: style can be found in dropdown.less -->
                    <li class="dropdown user user-menu">
                        `)
	buffer.WriteString(`
<a href="#" class="dropdown-toggle" data-toggle="dropdown">
    <img src="http://localhost:4003`)
	hero.EscapeHTML(user.Avatar, buffer)
	buffer.WriteString(`" class="user-image" alt="User Image">
    <span class="hidden-xs">`)
	hero.EscapeHTML(user.Name, buffer)
	buffer.WriteString(`</span>
</a>
<ul class="dropdown-menu">
    <!-- User image -->
    <li class="user-header">
        <img src="http://localhost:4003`)
	hero.EscapeHTML(user.Avatar, buffer)
	buffer.WriteString(`" class="img-circle" alt="User Image">
        <p>
            `)
	hero.EscapeHTML(user.Name, buffer)
	buffer.WriteString(` - `)
	hero.EscapeHTML(user.LevelName, buffer)
	buffer.WriteString(`
            <small>`)
	hero.EscapeHTML(user.CreateAt, buffer)
	buffer.WriteString(`</small>
        </p>
    </li>
    <li class="user-footer">
        <div class="pull-left">
            <a href="/info/manager/edit?id=`)
	hero.EscapeHTML(user.ID, buffer)
	buffer.WriteString(`" class="btn btn-default btn-flat">Setting</a>
        </div>
        <div class="pull-right">
            <a href="/logout" class="btn btn-default btn-flat">Sign out</a>
        </div>
    </li>
</ul>
`)

	buffer.WriteString(`
                    </li>
                </ul>
            </div>
        </nav>
    </header>
    <!-- Left side column. contains the logo and sidebar -->
    <aside class="main-sidebar">
        <!-- sidebar: style can be found in sidebar.less -->
        <section class="sidebar">
            <!-- Sidebar user panel -->
            <div class="user-panel">
                <div class="pull-left image">
                    <img src="../../assets/dist/img/avatar04.png" class="img-circle" alt="User Image">
                </div>
                <div class="pull-left info">
                    `)
	buffer.WriteString(`
<p>`)
	hero.EscapeHTML(user.Name, buffer)
	buffer.WriteString(`</p>
`)

	buffer.WriteString(`
                    <a href="#"><i class="fa fa-circle text-success"></i> Online</a>
                </div>
            </div>
            <!-- search form -->
            <form action="#" method="get" class="sidebar-form">
                <div class="input-group">
                    <input type="text" name="q" class="form-control" placeholder="Search...">
                    <span class="input-group-btn">
                <button type="submit" name="search" id="search-btn" class="btn btn-flat"><i class="fa fa-search"></i>
                </button>
              </span>
                </div>
            </form>
            <!-- /.search form -->
            <!-- sidebar menu: : style can be found in sidebar.less -->
            <ul class="sidebar-menu" data-widget="tree">
                <li class="header">MAIN NAVIGATION</li>
                `)
	for _, list := range menuList {
		if len(list.ChildrenList) == 0 {
			buffer.WriteString(`
<li class='`)
			hero.EscapeHTML(list.Active, buffer)
			buffer.WriteString(`'>
    <a href='`)
			hero.EscapeHTML(list.Url, buffer)
			buffer.WriteString(`'>
        <i class="fa `)
			hero.EscapeHTML(list.Icon, buffer)
			buffer.WriteString(`"></i><span>`)
			hero.EscapeHTML(list.Name, buffer)
			buffer.WriteString(`</span>
        <span class="pull-right-container"><!-- <small class="label pull-right bg-green">new</small> --></span>
    </a>
</li>
`)
		} else {
			buffer.WriteString(`
<li class="treeview `)
			hero.EscapeHTML(list.Active, buffer)
			buffer.WriteString(`">
    <a href="#">
        <i class="fa `)
			hero.EscapeHTML(list.Icon, buffer)
			buffer.WriteString(`"></i> <span>`)
			hero.EscapeHTML(list.Name, buffer)
			buffer.WriteString(`</span>
        <span class="pull-right-container">
                                  <i class="fa fa-angle-left pull-right"></i>
                                </span>
    </a>
    <ul class="treeview-menu">
        `)
			for _, item := range list.ChildrenList {
				buffer.WriteString(`
        <li><a href="`)
				hero.EscapeHTML(item.Url, buffer)
				buffer.WriteString(`"><i class="fa `)
				hero.EscapeHTML(item.Icon, buffer)
				buffer.WriteString(`"></i> `)
				hero.EscapeHTML(item.Name, buffer)
				buffer.WriteString(`</a></li>
        `)
			}
			buffer.WriteString(`
    </ul>
</li>
`)
		}
	}

	buffer.WriteString(`
            </ul>
        </section>
        <!-- /.sidebar -->
    </aside>

    <!-- Content Wrapper. Contains page content -->
    <div class="content-wrapper" id="pjax-container">
        <!-- Content Header (Page header) -->
        <section class="content-header">
            `)
	buffer.WriteString(`
<h1>
    `)
	hero.EscapeHTML(title, buffer)
	buffer.WriteString(`
    <small>`)
	hero.EscapeHTML(description, buffer)
	buffer.WriteString(`</small>
</h1>
`)

	buffer.WriteString(`
        </section>

        <!-- Main content -->
        <section class="content">
            <div class="row">
                <div class="col-xs-12">
                    <div class="box">
                        <div class="box-header">
                            <h3 class="box-title"></h3>
                            <div class="pull-right">
                                <div class="btn-group pull-right" style="margin-right: 10px">
                                    <a href="" class="btn btn-sm btn-primary" data-toggle="modal"
                                       data-target="#filter-modal"><i class="fa fa-filter"></i>&nbsp;&nbsp;Filter</a>
                                    <a href="/story/word"
                                       class="btn btn-sm btn-facebook"><i class="fa fa-undo"></i>&nbsp;&nbsp;Reset</a>
                                </div>
                                <div class="modal fade" id="filter-modal" role="dialog" aria-labelledby="myModalLabel"
                                     aria-hidden="true">
                                    <div class="modal-dialog" role="document">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <button type="button" class="close" data-dismiss="modal"
                                                        aria-label="Close">
                                                    <span aria-hidden="true">×</span>
                                                    <span class="sr-only">Close</span>
                                                </button>
                                                <h4 class="modal-title" id="myModalLabel">Filter</h4>
                                            </div>
                                            <form action="/story/word"
                                                  method="get" pjax-container="">
                                                <div class="modal-body">
                                                    <div class="form">
                                                        <div class="form-group">
                                                            <div class="form-group">
                                                                <label>ID</label>
                                                                <div class="input-group">
                                                                    <div class="input-group-addon">
                                                                        <i class="fa fa-pencil"></i>
                                                                    </div>
                                                                    <input type="text" class="form-control id"
                                                                           placeholder="ID" name="id" value="">
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="modal-footer">
                                                    <button type="submit" class="btn btn-primary submit">Submit</button>
                                                    <button type="reset" class="btn btn-warning pull-left">Reset
                                                    </button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>

                                <div class="btn-group pull-right" style="margin-right: 10px">
                                    <a class="btn btn-sm btn-twitter"><i class="fa fa-download"></i> Export</a>
                                    <button type="button" class="btn btn-sm btn-twitter dropdown-toggle"
                                            data-toggle="dropdown">
                                        <span class="caret"></span>
                                        <span class="sr-only">Toggle Dropdown</span>
                                    </button>
                                    <ul class="dropdown-menu" role="menu">
                                        <li><a href="/admin/story/word?_export_=all" target="_blank">All</a></li>
                                        <li><a href="/admin/story/word?_export_=page%3A1" target="_blank">Current
                                            page</a></li>
                                        <li><a href="/admin/story/word?_export_=selected%3A__rows__" target="_blank"
                                               class="export-selected">Selected rows</a></li>
                                    </ul>
                                </div>

                                <div class="btn-group pull-right" style="margin-right: 10px">
                                    `)
	buffer.WriteString(`
<a href='`)
	hero.EscapeHTML(paginator["new_url"].(string), buffer)
	buffer.WriteString(`' class="btn btn-sm btn-success">
`)

	buffer.WriteString(`
                                    <i class="fa fa-save"></i>&nbsp;&nbsp;New
                                    </a>
                                </div>
                            </div>
                            <span>
                                <input type="checkbox" class="grid-select-all" style="position: absolute; opacity: 0;">

                                <div class="btn-group">
                                    <a class="btn btn-sm btn-default">  Action</a>
                                    <button type="button" class="btn btn-sm btn-default dropdown-toggle" data-toggle="dropdown">
                                        <span class="caret"></span>
                                        <span class="sr-only">Toggle Dropdown</span>
                                    </button>
                                    <ul class="dropdown-menu" role="menu">
                                        <li><a href="#" class="grid-batch-0">Delete</a></li>
                                    </ul>
                                </div> <a class="btn btn-sm btn-primary grid-refresh"><i class="fa fa-refresh"></i> Refresh</a>
                            </span>
                        </div>
                        <!-- /.box-header -->
                        <div class="box-body table-responsive no-padding">
                            <table class="table table-hover">
                                <tbody>
                                <tr>
                                    `)
	buffer.WriteString(`
<th></th>
`)
	for _, head := range thead {
		buffer.WriteString(`
<th>
    `)
		hero.EscapeHTML(head, buffer)
		buffer.WriteString(`
    <!-- <a class="fa fa-fw fa-sort" href="/admin/story/word?_sort%5Bcolumn%5D=id&amp;_sort%5Btype%5D=desc"></a> -->
</th>
`)
	}
	buffer.WriteString(`
<th>操作</th>
`)

	buffer.WriteString(`
                                </tr>
                                `)
	for _, info := range infoList {
		buffer.WriteString(`
<tr>
    <td>
        <input type="checkbox" class="grid-row-checkbox" data-id="1" style="position: absolute; opacity: 0;">
    </td>
    `)
		for _, head := range thead {
			buffer.WriteString(`
    <td>`)
			buffer.WriteString(info[head])
			buffer.WriteString(`</td>
    `)
		}
		buffer.WriteString(`
    <td>
        <a href='`)
		hero.EscapeHTML(paginator["edit_url"].(string), buffer)
		buffer.WriteString(`&id=`)
		hero.EscapeHTML(info["id"], buffer)
		buffer.WriteString(`'>
            <i class="fa fa-edit"></i>
        </a>
        <a href="javascript:void(0);" data-id='`)
		hero.EscapeHTML(info["id"], buffer)
		buffer.WriteString(`' class="grid-row-delete">
            <i class="fa fa-trash"></i>
        </a>
    </td>
</tr>
`)
	}

	buffer.WriteString(`
                                </tbody>
                            </table>
                        </div>
                        <!-- /.box-body -->
                        `)
	buffer.WriteString(`
<div class="box-footer clearfix">
    Showing <b>`)
	hero.EscapeHTML(paginator["curPageStartIndex"].(string), buffer)
	buffer.WriteString(`</b> to <b>`)
	hero.EscapeHTML(paginator["curPageEndIndex"].(string), buffer)
	buffer.WriteString(`</b> of <b>`)
	hero.EscapeHTML(paginator["total"].(string), buffer)
	buffer.WriteString(`</b> entries
    <ul class="pagination pagination-sm no-margin pull-right">
        <!-- Previous Page Link -->
        <li class='page-item `)
	hero.EscapeHTML(paginator["previou_class"].(string), buffer)
	buffer.WriteString(`'>
            `)
	if paginator["previou_class"] != "disabled" {
		buffer.WriteString(`
                <a class="page-link" href='`)
		hero.EscapeHTML(paginator["previou_url"].(string), buffer)
		buffer.WriteString(`' rel="next">«</a>
            `)
	} else {
		buffer.WriteString(`
                <span class="page-link">«</span>
            `)
	}
	buffer.WriteString(`
        </li>

        <!-- Pagination Elements -->
        <!-- "Three Dots" Separator -->

        <!-- Array Of Links -->
        <!--<li class="page-item active"><span class="page-link">1</span></li>
        <li class="page-item"><a class="page-link"
                                 href="?page=2">2</a>
        </li>-->

        <!-- Next Page Link -->
        <li class='page-item `)
	hero.EscapeHTML(paginator["next_class"].(string), buffer)
	buffer.WriteString(`'>
            `)
	if paginator["next_class"].(string) != "disabled" {
		buffer.WriteString(`
                <a class="page-link" href='`)
		hero.EscapeHTML(paginator["next_url"].(string), buffer)
		buffer.WriteString(`' rel="next">»</a>
            `)
	} else {
		buffer.WriteString(`
                <span class="page-link">»</span>
            `)
	}
	buffer.WriteString(`
        </li>
    </ul>

    <label class="control-label pull-right" style="margin-right: 10px; font-weight: 100;">

        <small>Show</small>&nbsp;
        <select class="input-sm grid-per-pager" name="per-page">
            <option value='`)
	hero.EscapeHTML(paginator["url"].(string), buffer)
	buffer.WriteString(`&pageSize=10' `)
	hero.EscapeHTML(paginator["option"].(map[string]string)["10"], buffer)
	buffer.WriteString(`>
                10
            </option>
            <option value='`)
	hero.EscapeHTML(paginator["url"].(string), buffer)
	buffer.WriteString(`&pageSize=20' `)
	hero.EscapeHTML(paginator["option"].(map[string]string)["20"], buffer)
	buffer.WriteString(`>
                20
            </option>
            <option value='`)
	hero.EscapeHTML(paginator["url"].(string), buffer)
	buffer.WriteString(`&pageSize=30' `)
	hero.EscapeHTML(paginator["option"].(map[string]string)["30"], buffer)
	buffer.WriteString(`>
                30
            </option>
            <option value='`)
	hero.EscapeHTML(paginator["url"].(string), buffer)
	buffer.WriteString(`&pageSize=50' `)
	hero.EscapeHTML(paginator["option"].(map[string]string)["50"], buffer)
	buffer.WriteString(`>
                50
            </option>
            <option value='`)
	hero.EscapeHTML(paginator["url"].(string), buffer)
	buffer.WriteString(`&pageSize=100' `)
	hero.EscapeHTML(paginator["option"].(map[string]string)["100"], buffer)
	buffer.WriteString(`>
                100
            </option>s
        </select>
        &nbsp;<small>entries</small>
    </label>
</div>
`)

	buffer.WriteString(`
                        <!-- /.box-footer -->
                    </div>
                    <!-- /.box -->
                </div>
                <!-- /.col -->
            </div>
            <!-- /.row -->
        </section>
        <!-- /.content -->
    </div>
    <!-- /.content-wrapper -->
    <footer class="main-footer">
        <div class="pull-right hidden-xs">
            <b>Version</b> 0.0.1
        </div>
        <strong>Copyright &copy; 2018- <a href="https://github.com/chenhg5/go-admin">GoAdmin</a>.</strong> All rights
        reserved.
    </footer>
</div>
<!-- ./wrapper -->

<!-- jQuery 3 -->
<!-- <script src="../../assets/jquery/dist/jquery.min.js"></script> -->
<script src="../../assets/jQuery/jQuery-2.1.4.min.js"></script>
<!-- Bootstrap 3.3.7 -->
<script src="../../assets/bootstrap/dist/js/bootstrap.min.js"></script>
<!-- DataTables -->
<script src="../../assets/datatables.net/js/jquery.dataTables.min.js"></script>
<script src="../../assets/datatables.net-bs/js/dataTables.bootstrap.min.js"></script>
<!-- SlimScroll -->
<script src="../../assets/jquery-slimscroll/jquery.slimscroll.min.js"></script>
<!-- FastClick -->
<script src="../../assets/fastclick/lib/fastclick.js"></script>
<!-- AdminLTE App -->
<script src="../../assets/dist/js/adminlte.min.js"></script>
<!-- AdminLTE for demo purposes -->
<script src="../../assets/dist/js/demo.js"></script>
<script src="../../assets/select2/select2.full.min.js"></script>
<script src="../../assets/fileinput/fileinput.min.js"></script>
<script src="../../assets/iCheck/icheck.min.js"></script>
<script src="../../assets/nprogress/nprogress.js"></script>
<script src="../../assets/toastr/build/toastr.min.js"></script>
<script src="../../assets/bootstrap3-editable/js/bootstrap-editable.min.js"></script>
<script src="../../assets/jquery-pjax/jquery.pjax.js"></script>
<script src="../../assets/sweetalert/dist/sweetalert.min.js"></script>
<script src="../../assets/duallistbox/jquery.bootstrap-duallistbox.min.js"></script>
<script>
    $('.grid-per-pager').on("change", function (e) {
        console.log("changing...")
        $.pjax({url: this.value, container: '#pjax-container'});
    });
    $('.grid-refresh').on('click', function () {
        $.pjax.reload('#pjax-container');
        toastr.success('Refresh succeeded !');
    });
    // edit result notify
    // toastr.success('Refresh succeeded !');
    $.fn.editable.defaults.params = function (params) {
        params._token = LA.token;
        params._editable = 1;
        params._method = 'PUT';
        return params;
    };

    $.fn.editable.defaults.error = function (data) {
        var msg = '';
        if (data.responseJSON.errors) {
            $.each(data.responseJSON.errors, function (k, v) {
                msg += v + "\n";
            });
        }
        return msg
    };

    toastr.options = {
        closeButton: true,
        progressBar: true,
        showMethod: 'slideDown',
        timeOut: 4000
    };

    $.pjax.defaults.timeout = 5000;
    $.pjax.defaults.maxCacheLength = 0;
    $(document).pjax('a:not(a[target="_blank"])', {
        container: '#pjax-container'
    });

    NProgress.configure({parent: '#pjax-container'});

    $(document).on('pjax:timeout', function (event) {
        event.preventDefault();
    });

    $(document).on('submit', 'form[pjax-container]', function (event) {
        $.pjax.submit(event, '#pjax-container')
    });

    $(document).on("pjax:popstate", function () {

        $(document).one("pjax:end", function (event) {
            $(event.target).find("script[data-exec-on-popstate]").each(function () {
                $.globalEval(this.text || this.textContent || this.innerHTML || '');
            });
        });
    });

    $(document).on('pjax:send', function (xhr) {
        if (xhr.relatedTarget && xhr.relatedTarget.tagName && xhr.relatedTarget.tagName.toLowerCase() === 'form') {
            $submit_btn = $('form[pjax-container] :submit');
            if ($submit_btn) {
                $submit_btn.button('loading')
            }
        }
        NProgress.start();
    });

    $(document).on('pjax:complete', function (xhr) {
        if (xhr.relatedTarget && xhr.relatedTarget.tagName && xhr.relatedTarget.tagName.toLowerCase() === 'form') {
            $submit_btn = $('form[pjax-container] :submit');
            if ($submit_btn) {
                $submit_btn.button('reset')
            }
        }
        NProgress.done();
    });

    $(function () {
        $('.sidebar-menu li:not(.treeview) > a').on('click', function () {
            var $parent = $(this).parent().addClass('active');
            $parent.siblings('.treeview.active').find('> a').trigger('click');
            $parent.siblings().removeClass('active').find('li').removeClass('active');
        });

        $('[data-toggle="popover"]').popover();
    });

    // (function ($) {
    //     $.fn.admin = LA;
    //     $.admin = LA;
    //
    // })(jQuery);

    $('.grid-row-delete').unbind('click').click(function () {

        var id = $(this).data('id');

        swal({
            title: "你确定要删除吗",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "确定",
            closeOnConfirm: false,
            cancelButtonText: "取消"
        },
        function () {
            `)
	buffer.WriteString(`
    $.ajax({
        method: 'post',
        url: '`)
	hero.EscapeHTML(paginator["delete_url"].(string), buffer)
	buffer.WriteString(`',
        data: {
            id: id
        },
        success: function (data) {
            $.pjax.reload('#pjax-container');

            data = JSON.parse(data)
            if (data.code == 200) {
                swal(data.msg, '', 'success');
            } else {
                swal(data.msg, '', 'error');
            }
        },
        error: function (data) {
            swal("删除失败", '', 'error');
        }
    });
`)

	buffer.WriteString(`
        });
    });

    $('.grid-select-all').on('ifChanged', function (event) {
        if (this.checked) {
            $('.grid-row-checkbox').iCheck('check');
        } else {
            $('.grid-row-checkbox').iCheck('uncheck');
        }
    });
    $('.grid-select-all').iCheck({checkboxClass: 'icheckbox_minimal-blue'});

    $(function () {
        $('.grid-row-checkbox').iCheck({checkboxClass: 'icheckbox_minimal-blue'}).on('ifChanged', function () {
            if (this.checked) {
                $(this).closest('tr').css('background-color', "#ffffd5");
            } else {
                $(this).closest('tr').css('background-color', '');
            }
        });
    });
</script>
</body>
</html>
`)

}
