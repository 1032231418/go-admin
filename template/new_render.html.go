// Code generated by hero.
// source: /Users/chenhg5/go/src/goAdmin/resources/pages/new_render.html
// DO NOT EDIT!
package template

import (
	"bytes"
	"goAdmin/menu"
	"goAdmin/models"

	"github.com/shiyanhui/hero"
)

func NewPanel(formData []models.FormStruct, url string, previous string, id string, menuList []menu.MenuItem, title string, description string, token string, buffer *bytes.Buffer) {
	buffer.WriteString(`<!DOCTYPE html>
<html>
`)
	buffer.WriteString(`<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>GoAdmin</title>
    <!-- Tell the browser to be responsive to screen width -->
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    <!-- Bootstrap 3.3.7 -->
    <link rel="stylesheet" href="../../assets/bootstrap/dist/css/bootstrap.min.css">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="../../assets/font-awesome/css/font-awesome.min.css">
    <!-- Ionicons -->
    <link rel="stylesheet" href="../../assets/Ionicons/css/ionicons.min.css">
    <!-- DataTables -->
    <link rel="stylesheet" href="../../assets/datatables.net-bs/css/dataTables.bootstrap.min.css">
    <!-- iCheck -->
    <link rel="stylesheet" href="../../assets/iCheck/minimal/_all.css">
    <link rel="stylesheet" href="../../assets/iCheck/futurico/futurico.css">
    <link rel="stylesheet" href="../../assets/iCheck/polaris/polaris.css">
    <link rel="stylesheet" href="../../assets/toastr/build/toastr.min.css">
    <link rel="stylesheet" href="../../assets/nprogress/nprogress.css">
    <link rel="stylesheet" href="../../assets/select2/select2.min.css">
    <link rel="stylesheet" href="../../assets/sweetalert/dist/sweetalert.css">
    <link rel="stylesheet" href="../../assets/fileinput/fileinput.min.css">
    <link rel="stylesheet" href="../../assets/nestable/nestable.css">
    <link rel="stylesheet" href="../../assets/duallistbox/bootstrap-duallistbox.min.css">
    <link rel="stylesheet" href="../../assets/fontawesome-iconpicker/dist/css/fontawesome-iconpicker.min.css">
    <!-- Theme style -->
    <link rel="stylesheet" href="../../assets/dist/css/AdminLTE.min.css">
    <link rel="stylesheet" href="../../assets/dist/css/skins/skin-black.css">
    <!--[if lt IE 9]>
    <script src="../../assets/html5shiv/3.7.3/html5shiv.min.js"></script>
    <script src="../../assets/respond/1.4.2/respond.min.js"></script>
    <![endif]-->

    <!-- Google Font -->
    <link rel="stylesheet" href="../../assets/googleapis/font.css">

    <script src="../../assets/jQuery/jQuery-2.1.4.min.js"></script>
    <script src="../../assets/nestable/jquery.nestable.js"></script>
    <script src="../../assets/dist/js/adminlte.min.js"></script>
</head>`)

	buffer.WriteString(`
<body class="hold-transition skin-black sidebar-mini">
<div class="wrapper">

    <header class="main-header">
        <!-- Logo -->
        <a href="/" class="logo">
            <!-- mini logo for sidebar mini 50x50 pixels -->
            <span class="logo-mini"><b>G</b>A</span>
            <!-- logo for regular state and mobile devices -->
            <span class="logo-lg"><b>Go</b>Admin</span>
        </a>
        <!-- Header Navbar: style can be found in header.less -->
        <nav class="navbar navbar-static-top">
            <!-- Sidebar toggle button-->
            <a href="#" class="sidebar-toggle" data-toggle="offcanvas" role="button">
                <span class="sr-only">Toggle navigation</span>
            </a>

            <div class="navbar-custom-menu">
                <ul class="nav navbar-nav">
                    <!-- User Account: style can be found in dropdown.less -->
                    <li class="dropdown user user-menu">
                    <li class="dropdown user user-menu">
                        `)
	buffer.WriteString(`
                    </li>
                </ul>
            </div>
        </nav>
    </header>
    <!-- Left side column. contains the logo and sidebar -->
    <aside class="main-sidebar">
        <!-- sidebar: style can be found in sidebar.less -->
        <section class="sidebar">
            <!-- Sidebar user panel -->
            <div class="user-panel">
                <div class="pull-left image">
                    <img src="../../assets/dist/img/avatar04.png" class="img-circle" alt="User Image">
                </div>
                <div class="pull-left info">
                    `)
	buffer.WriteString(`
                    <a href="#"><i class="fa fa-circle text-success"></i> Online</a>
                </div>
            </div>
            <form action="#" method="get" class="sidebar-form">
                <div class="input-group">
                    <input type="text" name="q" class="form-control" placeholder="Search...">
                    <span class="input-group-btn">
                <button type="submit" name="search" id="search-btn" class="btn btn-flat"><i class="fa fa-search"></i>
                </button>
              </span>
                </div>
            </form>
            <ul class="sidebar-menu" data-widget="tree">
                <li class="header">MAIN NAVIGATION</li>
                `)
	for _, list := range menuList {
		if len(list.ChildrenList) == 0 {
			buffer.WriteString(`
<li class='`)
			hero.EscapeHTML(list.Active, buffer)
			buffer.WriteString(`'>
    <a href='`)
			hero.EscapeHTML(list.Url, buffer)
			buffer.WriteString(`'>
        <i class="fa `)
			hero.EscapeHTML(list.Icon, buffer)
			buffer.WriteString(`"></i><span>`)
			hero.EscapeHTML(list.Name, buffer)
			buffer.WriteString(`</span>
        <span class="pull-right-container"><!-- <small class="label pull-right bg-green">new</small> --></span>
    </a>
</li>
`)
		} else {
			buffer.WriteString(`
<li class="treeview `)
			hero.EscapeHTML(list.Active, buffer)
			buffer.WriteString(`">
    <a href="#">
        <i class="fa `)
			hero.EscapeHTML(list.Icon, buffer)
			buffer.WriteString(`"></i> <span>`)
			hero.EscapeHTML(list.Name, buffer)
			buffer.WriteString(`</span>
        <span class="pull-right-container">
                                  <i class="fa fa-angle-left pull-right"></i>
                                </span>
    </a>
    <ul class="treeview-menu">
        `)
			for _, item := range list.ChildrenList {
				buffer.WriteString(`
        <li><a href="`)
				hero.EscapeHTML(item.Url, buffer)
				buffer.WriteString(`"><i class="fa `)
				hero.EscapeHTML(item.Icon, buffer)
				buffer.WriteString(`"></i> `)
				hero.EscapeHTML(item.Name, buffer)
				buffer.WriteString(`</a></li>
        `)
			}
			buffer.WriteString(`
    </ul>
</li>
`)
		}
	}

	buffer.WriteString(`
            </ul>
        </section>
        <!-- /.sidebar -->
    </aside>

    <!-- Content Wrapper. Contains page content -->
    <div class="content-wrapper" id="pjax-container">
        <section class="content-header">
            `)
	buffer.WriteString(`
<h1>
    `)
	hero.EscapeHTML(title, buffer)
	buffer.WriteString(`
    <small>`)
	hero.EscapeHTML(description, buffer)
	buffer.WriteString(`</small>
</h1>
`)

	buffer.WriteString(`
        </section>
        <section class="content">
            <div class="row">
                <div class="col-md-12">
                    <div class="box box-info">
                        <div class="box-header with-border">
                            <h3 class="box-title">Edit</h3>
                            <div class="box-tools">
                                <div class="btn-group pull-right" style="margin-right: 10px">
                                    <a href="" class="btn btn-sm btn-default"><i class="fa fa-list"></i> List</a>
                                </div>
                                <div class="btn-group pull-right" style="margin-right: 10px">
                                    <a class="btn btn-sm btn-default form-history-back"><i class="fa fa-arrow-left"></i> Back</a>
                                </div>
                            </div>
                        </div>
                        `)
	buffer.WriteString(`
<form action='`)
	hero.EscapeHTML(url, buffer)
	buffer.WriteString(`' method="post" accept-charset="UTF-8" class="form-horizontal" pjax-container>
`)

	buffer.WriteString(`
                        <div class="box-body">
                            <div class="fields-group">
                                `)
	for _, data := range formData {
		buffer.WriteString(`
<div class="form-group ">
    `)
		if data.Field != "created_at" && data.Field != "updated_at" && data.Field != "id" {
			if data.FormType == "default" {
				buffer.WriteString(`
        <label class="col-sm-2 control-label">`)
				hero.EscapeHTML(data.Head, buffer)
				buffer.WriteString(`</label>
        <div class="col-sm-8">
            <div class="box box-solid box-default no-margin">
                <!-- /.box-header -->
                <div class="box-body">
                    `)
				hero.EscapeHTML(data.Value, buffer)
				buffer.WriteString(` 
                </div>
                <!-- /.box-body -->
            </div>
        </div>
    `)
			} else if data.FormType == "text" {
				buffer.WriteString(`
        <label for="`)
				hero.EscapeHTML(data.Field, buffer)
				buffer.WriteString(`" class="col-sm-2 control-label">`)
				hero.EscapeHTML(data.Head, buffer)
				buffer.WriteString(`</label>
        <div class="col-sm-8">
            <div class="input-group">
                <span class="input-group-addon"><i class="fa fa-pencil fa-fw"></i></span>
                <input type="text" id="`)
				hero.EscapeHTML(data.Field, buffer)
				buffer.WriteString(`" name="`)
				hero.EscapeHTML(data.Field, buffer)
				buffer.WriteString(`" value='' class="form-control `)
				hero.EscapeHTML(data.Field, buffer)
				buffer.WriteString(`" placeholder="Input `)
				hero.EscapeHTML(data.Head, buffer)
				buffer.WriteString(`">
            </div>
        </div>
    `)
			} else if data.FormType == "password" {
				buffer.WriteString(`
        <label for="`)
				hero.EscapeHTML(data.Field, buffer)
				buffer.WriteString(`" class="col-sm-2 control-label">`)
				hero.EscapeHTML(data.Head, buffer)
				buffer.WriteString(`</label>
        <div class="col-sm-8">
            <div class="input-group">
                <span class="input-group-addon"><i class="fa fa-eye-slash"></i></span>
                <input type="password" id="`)
				hero.EscapeHTML(data.Field, buffer)
				buffer.WriteString(`" name="`)
				hero.EscapeHTML(data.Field, buffer)
				buffer.WriteString(`" value="" class="form-control `)
				hero.EscapeHTML(data.Field, buffer)
				buffer.WriteString(`" placeholder="Input `)
				hero.EscapeHTML(data.Head, buffer)
				buffer.WriteString(`">
            </div>
        </div>
    `)
			} else if data.FormType == "textarea" {
				buffer.WriteString(`
        <label for="http_path" class="col-sm-2 control-label">`)
				hero.EscapeHTML(data.Head, buffer)
				buffer.WriteString(`</label>
        <div class="col-sm-8">
            <textarea name="http_path" class="form-control" rows="5" placeholder="Input text"></textarea>
        </div>
    `)
			} else if data.FormType == "select" {
				buffer.WriteString(`
        <label for="`)
				hero.EscapeHTML(data.Field, buffer)
				buffer.WriteString(`" class="col-sm-2 control-label">`)
				hero.EscapeHTML(data.Head, buffer)
				buffer.WriteString(`</label>
        <div class="col-sm-8">
            <select class="form-control `)
				hero.EscapeHTML(data.Field, buffer)
				buffer.WriteString(` select2-hidden-accessible" style="width: 100%;" name="`)
				hero.EscapeHTML(data.Field, buffer)
				buffer.WriteString(`[]" multiple="" data-placeholder="Input HTTP method" tabindex="-1" aria-hidden="true">
                `)
				for _, v := range data.Options {
					buffer.WriteString(`
                    <option value='`)
					hero.EscapeHTML(v["value"], buffer)
					buffer.WriteString(`'>`)
					hero.EscapeHTML(v["field"], buffer)
					buffer.WriteString(`</option>
                `)
				}
				buffer.WriteString(`
            </select>
            <input type="hidden" name="`)
				hero.EscapeHTML(data.Field, buffer)
				buffer.WriteString(`[]">
            <span class="help-block">
                    <i class="fa fa-info-circle"></i>&nbsp;All methods if empty
                </span>
        </div>
        <script>
            $(".`)
				hero.EscapeHTML(data.Field, buffer)
				buffer.WriteString(`").select2({
                allowClear: true,
                placeholder: "`)
				hero.EscapeHTML(data.Head, buffer)
				buffer.WriteString(`"
            });
        </script>
    `)
			} else if data.FormType == "file" {
				buffer.WriteString(`
        <label for="`)
				hero.EscapeHTML(data.Field, buffer)
				buffer.WriteString(`" class="col-sm-2  control-label">`)
				hero.EscapeHTML(data.Head, buffer)
				buffer.WriteString(`</label>
        <div class="col-sm-8">
            <input type="file" class="`)
				hero.EscapeHTML(data.Field, buffer)
				buffer.WriteString(`" name="`)
				hero.EscapeHTML(data.Field, buffer)
				buffer.WriteString(`" data-initial-preview="" data-initial-caption="">
        </div>
        <script>
            $("input.`)
				hero.EscapeHTML(data.Field, buffer)
				buffer.WriteString(`").fileinput({
                "overwriteInitial":true,
                "initialPreviewAsData":true,
                "browseLabel":"Browse",
                "showRemove":false,
                "showUpload":false,
                "deleteExtraData":{
                    "avatar":"_file_del_",
                    "_file_del_":"",
                    "_token":"NVXb8lY1QT6oi7DMPFLwU9IlHiSON3C6isKIF1kD",
                    "_method":"PUT"
                },
                "deleteUrl":"http:\/\/laravel-admin.org\/demo\/auth\/1",
                "allowedFileTypes":["image"]
            });
        </script>
    `)
			} else if data.FormType == "selectbox" {
				buffer.WriteString(`
        <label for="`)
				hero.EscapeHTML(data.Field, buffer)
				buffer.WriteString(`" class="col-sm-2  control-label">`)
				hero.EscapeHTML(data.Head, buffer)
				buffer.WriteString(`</label>
        <div class="col-sm-8">
            <select class="form-control `)
				hero.EscapeHTML(data.Field, buffer)
				buffer.WriteString(`" style="width: 100%;" name="`)
				hero.EscapeHTML(data.Field, buffer)
				buffer.WriteString(`[]" multiple="multiple" data-placeholder="Input `)
				hero.EscapeHTML(data.Head, buffer)
				buffer.WriteString(`"  >
                <option value="1" selected>All permission</option>
                <option value="2" >Dashboard</option>
                <option value="3" >Login</option>
                <option value="4" >User setting</option>
                <option value="5" >Auth management</option>
                <option value="6" >Admin Config</option>
                <option value="7" >Scheduling</option>
                <option value="8" >Logs</option>
                <option value="9" >Api tester</option>
                <option value="10" >Media manager</option>
                <option value="11" >Admin helpers</option>
                <option value="12" >Exceptions reporter</option>
            </select>
            <input type="hidden" name="`)
				hero.EscapeHTML(data.Field, buffer)
				buffer.WriteString(`[]" />
        </div>
        <script>
            $(".`)
				hero.EscapeHTML(data.Field, buffer)
				buffer.WriteString(`").bootstrapDualListbox({"infoText":"Showing all {0}","infoTextEmpty":"Empty list","infoTextFiltered":"{0} \/ {1}","filterTextClear":"Show all","filterPlaceHolder":"Filter"});
        </script>
    `)
			}
		}
		buffer.WriteString(`
</div>
`)
	}

	buffer.WriteString(`
                            </div>
                        </div>
                        <div class="box-footer">
                            <div class="col-md-2">
                            </div>
                            <div class="col-md-8">

                                <div class="btn-group pull-right">
                                    <button type="submit" class="btn btn-info pull-right"
                                            data-loading-text="&lt;i class='fa fa-spinner fa-spin '&gt;&lt;/i&gt; Save">
                                        Save
                                    </button>
                                </div>

                                <div class="btn-group pull-left">
                                    <button type="reset" class="btn btn-warning">Reset</button>
                                </div>

                            </div>

                        </div>

                        <input type="hidden" name="_method" value="PUT" class="_method">
                        `)
	buffer.WriteString(`
<input type="hidden" name="_previous_" value='`)
	hero.EscapeHTML(previous, buffer)
	buffer.WriteString(`' class="_previous_">
<input type="hidden" name="id" value='`)
	hero.EscapeHTML(id, buffer)
	buffer.WriteString(`' class="_previous_">
<input type="hidden" name="_t" value='`)
	hero.EscapeHTML(token, buffer)
	buffer.WriteString(`' class="_previous_">
`)

	buffer.WriteString(`
                        <!-- /.box-footer -->
                        </form>
                    </div>

                </div>
            </div>

        </section>
        <script data-exec-on-popstate>
            $(function () {
                $('.form-history-back').on('click', function (event) {
                    event.preventDefault();
                    history.back(1);
                });
            });
        </script>
    </div>
    <footer class="main-footer">
        <div class="pull-right hidden-xs">
            <b>Version</b> 2.4.0
        </div>
        <strong>Copyright &copy; 2018- <a href="https://github.com/chenhg5/go-admin">GoAdmin</a>.</strong> All rights
        reserved.
    </footer>
</div>

`)
	buffer.WriteString(`<script src="../../assets/bootstrap/dist/js/bootstrap.min.js"></script>
<script src="../../assets/datatables.net/js/jquery.dataTables.min.js"></script>
<script src="../../assets/datatables.net-bs/js/dataTables.bootstrap.min.js"></script>
<script src="../../assets/jquery-slimscroll/jquery.slimscroll.min.js"></script>
<script src="../../assets/fastclick/lib/fastclick.js"></script>
<script src="../../assets/select2/select2.full.min.js"></script>
<script src="../../assets/fileinput/fileinput.min.js"></script>
<script src="../../assets/iCheck/icheck.min.js"></script>
<script src="../../assets/nprogress/nprogress.js"></script>
<script src="../../assets/toastr/build/toastr.min.js"></script>
<script src="../../assets/bootstrap3-editable/js/bootstrap-editable.min.js"></script>
<script src="../../assets/jquery-pjax/jquery.pjax.js"></script>
<script src="../../assets/sweetalert/dist/sweetalert.min.js"></script>
<script src="../../assets/duallistbox/jquery.bootstrap-duallistbox.min.js"></script>
<script src="../../assets/fontawesome-iconpicker/dist/js/fontawesome-iconpicker.min.js"></script>`)

	buffer.WriteString(`
<script src="../../assets/dist/js/edit.js"></script>
</body>
</html>
`)

}
